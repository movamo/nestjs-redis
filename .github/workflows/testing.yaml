name: testing
on:
  pull_request:
    branches:
      - main
jobs:
  test:
    name: Node ${{ matrix.node_version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        node_version:
          - 14
          - 16
          - 18
        architecture:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          check-latest: true
          architecture: ${{ matrix.architecture }}
      - run: docker compose up -d
      - run: docker compose exec -T cluster-1_master-1 redis-cli --cluster create 127.0.0.1:16380 127.0.0.1:16381 127.0.0.1:16382 --cluster-yes
      - run: docker compose exec -T cluster-2_master-1 redis-cli --cluster create 127.0.0.1:16480 127.0.0.1:16481 127.0.0.1:16482 --cluster-yes
      - run: pnpm install --frozen-lockfile
      - run: pnpm -F "@mvmdev/nestjs-redis" lint
      - run: pnpm -F "@mvmdev/nestjs-redis" test
      - run: pnpm -F "@mvmdev/nestjs-redis" test:e2e
      - run: pnpm -F "@mvmdev/nestjs-redis-health" lint
      - run: pnpm -F "@mvmdev/nestjs-redis-health" test
      - run: pnpm -F "@mvmdev/nestjs-redis-health" test:e2e
      - run: docker compose down -v
